{{ 'section-featured-product.css' | asset_url | stylesheet_tag }}
{%- assign product_form_id = 'product-form-' | append: section.id -%}
{% assign product = all_products[section.settings.product] %}
{% assign current_variant = product.selected_or_first_available_variant %}
{% assign featured_image = current_variant.featured_image | default: product.featured_image %}

<div class="page-width">
  <div class="section-container">
    <div
      class="width-50"
      data-aos="fade-right"
      data-aos-offset="300"
      data-aos-easing="ease-in-sine"
    >
      <div class="featured-product__image">
        <img src="{{ product.featured_image | img_url: 'master' }}" alt="{{ product.featured_image.alt }}">
      </div>
    </div>
    <div
      class="width-50"
      data-aos="fade-left"
      data-aos-offset="300"
      data-aos-easing="ease-in-sine"
    >
      {%- form 'product', product, id: product_form_id -%}
        <input
          type="hidden"
          name="id"
          value="{{ product.selected_or_first_available_variant.id }}"
        >
        {%- for block in section.blocks -%}
          {%- case block.type -%}
            {% when 'title' %}
              <div class="featured-product__title">
                <h2>{{ product.title }}</h2>
              </div>
            {% when 'description' %}
              <div class="featured-product__description">
                <p>{{ product.description }}</p>
              </div>
            {% when 'vendor' %}
              <div class="featured-product__vendor">
                <h6>{{ product.vendor }} - {{ product.type }}</h6>
              </div>
            {% when 'price' %}
              {% render 'product-price', product: product %}
            {% when 'availability_selector' %}
              <div id="availability-container" class="availability">
                {% render 'product-instock', product: current_variant %}
              </div>
            {% when 'quantity_selector' %}
              <div class="featured-product__option">
                <legend>Menge</legend>
                <div class="featured-product__quantity-selector">
                  <button type="button" class="featured-product__quantity-selector-minus">
                    {% render 'icon-minus' %}
                  </button>
                  <input id="quantity" name="quantity" value="1" class="featured-product__quantity-selector-input">
                  <button type="button" class="featured-product__quantity-selector-plus">
                    {% render 'icon-plus' %}
                  </button>
                </div>
              </div>
            {% when 'variant_picker' %}
              {% unless product.has_only_default_variant %}
                <div class="product-variants" id="product-variants">
                  {% for option in product.options_with_values %}
                    {% liquid
                      assign variants_available_arr = product.variants | map: 'available'
                      assign variants_option1_arr = product.variants | map: 'option1'
                      assign variants_option2_arr = product.variants | map: 'option2'
                      assign variants_option3_arr = product.variants | map: 'option3'
                    %}
                    <div class="option {{ option.name | downcase }}">
                      <h6 class="text-uppercase">{{ option.name }}</h6>
                      {% for value in option.values %}
                        {% liquid
                          assign option_disabled = true

                          for option1_name in variants_option1_arr
                            case option.position
                              when 1
                                if variants_option1_arr[forloop.index0] == value and variants_available_arr[forloop.index0]
                                  assign option_disabled = false
                                endif
                              when 2
                                if option1_name == product.selected_or_first_available_variant.option1 and variants_option2_arr[forloop.index0] == value and variants_available_arr[forloop.index0]
                                  assign option_disabled = false
                                endif
                              when 3
                                if option1_name == product.selected_or_first_available_variant.option1 and variants_option2_arr[forloop.index0] == product.selected_or_first_available_variant.option2 and variants_option3_arr[forloop.index0] == value and variants_available_arr[forloop.index0]
                                  assign option_disabled = false
                                endif
                            endcase
                          endfor
                        %}
                        <label class="radio">
                          <input
                            type="radio"
                            name="{{- option.name | handleize -}}"
                            value="{{- value | handleize | escape -}}"
                            data-price="{{ value.price }}"
                            data-compare-price="{{ value.compare_at_price }}"
                            data-variant="{{ value.variant }}"
                            {% if option.selected_value == value %}
                              checked
                            {% endif %}
                            {% if option_disabled %}
                              disabled
                            {% endif %}
                          >
                          <span
                            {% if option_disabled %}
                              title="unavailable"
                            {% endif %}
                          >
                            {{ value | escape }}
                          </span>
                        </label>
                      {% endfor %}
                    </div>
                  {% endfor %}
                </div>
                <select
                  name="id"
                  id="variant_selector"
                  class="{%- if section.settings.show_selector %}hide{% endif %}"
                >
                  {% for variant in product.variants %}
                    <option
                      value="{{ variant.id }}"
                      data-name="{{ variant.title | handleize | escape }}"
                      data-price="{{ variant.price }}"
                      data-compare-price="{{ variant.compare_at_price }}"
                      data-variant="{{ variant.id }}"
                      data-inventory="{{ variant.inventory_quantity }}"
                      {%- if variant == current_variant %}
                        selected
                      {%- endif -%}
                      {%- if variant.available == false %}
                        data-sold="true"
                      {% endif %}
                    >
                      {{ variant.title | escape }}
                    </option>
                  {% endfor %}
                </select>
              {% endunless %}
            {% when 'rating' %}
              {% render 'product-rating', product: product, show_rating_count: block.settings.show_rating %}
            {% when 'add_to_cart' %}
              <div class="cart mt-4 align-items-center">
                <button
                  type="submit"
                  name="add"
                  class="btn btn-default text-uppercase mr-2 px-4 add_to_cart"
                  id="add-to-cart-button"
                >
                  Add to cart
                </button>
                <i class="fa fa-heart text-muted"></i>
                <i class="fa fa-share-alt text-muted"></i>
              </div>
            {% else %}

          {% endcase %}
        {%- endfor -%}
      {% endform %}
    </div>
  </div>
</div>

<script>
  function change_image(image) {
    var main_image = $('#main-image');
    main_image.attr('src', image.src);
  }

  $(document).ready(async () => {
    const product_url = '{{ product.url }}';

    const variantSelector = async () => {
      const options = $('#product-variants .option');
      let option_value = [];
      options.each((index, elm) => {
        let selected = $(elm).find('input:checked').val();
        option_value.push(selected);
      });
      option_value = option_value.join('-');
      console.log(option_value);

      const selOptions = $('#variant_selector option');
      selOptions.each((index, elm) => {
        const name = $(elm).data('name');
        const sold = $(elm).data('sold');
        $(elm).removeAttr('selected');
        if (name == option_value) {
          const btn = $('[name="add"]');
          if (sold) {
            btn.attr('disabled', 'true');
            btn.text('Sold Out');
          } else {
            $(elm).attr('selected', 'true');
            btn.removeAttr('disabled');
            btn.text('Add To Cart');

            const comparePriceElement = $('.featured-product__price .product--prices__compare');
            const pricePriceElement = $('.featured-product__price .product--prices__price');
            const selectedVariantPrice = $(elm).data('price');
            const selectedVariantComparePrice = $(elm).data('compare-price'); // Nehmen Sie an, dass diese Daten im HTML-Element vorhanden sind

            if (selectedVariantPrice) {
              const formattedPrice = formatMoney(selectedVariantPrice, '{{ shop.money_format }}');
              pricePriceElement.html(formattedPrice); // Ã„ndere 'priceElement' zu 'pricePriceElement'
            }

            if (selectedVariantComparePrice) {
              const formattedComparePrice = formatMoney(selectedVariantComparePrice, '{{ shop.money_format }}');
              comparePriceElement.html(formattedComparePrice);
            }

            const availabilityContainer = $('#availability-container');
            if (availabilityContainer.length) {
              const currentVariant = JSON.parse($(elm).data('variant'));
              const pulseCircle = availabilityContainer.find('.circle');

              if (currentVariant && pulseCircle.length) {
                const availabilityText = availabilityContainer.find('.availability-text');
                if (availabilityText.length) {
                  let availabilityMessage = '';
                  let pulseClass = '';
                  const selectedVariantInventory = $(elm).data('inventory');

                  if (selectedVariantInventory == 0) {
                    availabilityMessage = 'Ausverkauft. Bitte kontaktieren Sie uns fÃ¼r weitere Informationen.';
                    pulseClass = 'pulse red';
                  } else if (selectedVariantInventory < 10) {
                    availabilityMessage = `Fast ausverkauft. Nur noch ${selectedVariantInventory} verfÃ¼gbar.`;
                    pulseClass = 'pulse yellow';
                  } else {
                    availabilityMessage = `Auf Lager. In 24h versandbereit.`;
                    pulseClass = 'pulse green';
                  }

                  availabilityText.html(availabilityMessage);
                  pulseCircle.removeClass().addClass(`circle ${pulseClass}`);
                }
              }
            }
          }
        }
      });
    };

    await variantSelector();
    const optionSelectors = $('#product-variants label.radio');
    optionSelectors.on('click', () => {
      variantSelector().then(() => {
        let variantId = $('#variant_selector').val();
        let url = `${product_url}?variant=${variantId}`;
        window.history.replaceState({}, '', url);
      });
    });
  });
</script>

{% style %}
  .section-featured-product {
    background: var(--secondary_background);
  }
{% endstyle %}

{% schema %}
{
  "name": "t:sections.featured-product.name",
  "tag": "section",
  "class": "section section-featured-product",
  "disabled_on": {
    "groups": ["header", "footer"]
  },
  "blocks": [
    {
      "type": "rating",
      "name": "t:sections.featured-product.blocks.rating.name",
      "limit": 1,
      "settings": [
        {
          "type": "checkbox",
          "label": "t:sections.featured-product.blocks.rating.checkbox.label",
          "default": true,
          "id": "show_rating"
        }
      ]
    },
    {
      "type": "availability_selector",
      "name": "t:sections.featured-product.blocks.availability_selector.name",
      "limit": 1
    },
    {
      "type": "price",
      "name": "t:sections.featured-product.blocks.price.name",
      "limit": 1
    },
    {
      "type": "title",
      "name": "t:sections.featured-product.blocks.title.name",
      "limit": 1
    },
    {
      "type": "vendor",
      "name": "t:sections.featured-product.blocks.vendor.name",
      "limit": 1
    },
    {
      "type": "description",
      "name": "t:sections.featured-product.blocks.description.name",
      "limit": 1
    },
    {
      "type": "add_to_cart",
      "name": "t:sections.featured-product.blocks.add_to_cart.name",
      "limit": 1
    },
    {
      "type": "quantity_selector",
      "name": "t:sections.featured-product.blocks.quantity_selector.name",
      "limit": 1
    },
    {
      "type": "variant_picker",
      "name": "t:sections.featured-product.blocks.variant_picker.name",
      "limit": 1,
      "settings": [
        {
          "type": "select",
          "id": "picker_type",
          "options": [
            {
              "value": "dropdown",
              "label": "t:sections.featured-product.blocks.variant_picker.settings.picker_type.options__1.label"
            },
            {
              "value": "button",
              "label": "t:sections.featured-product.blocks.variant_picker.settings.picker_type.options__2.label"
            }
          ],
          "default": "button",
          "label": "t:sections.featured-product.blocks.variant_picker.settings.picker_type.label"
        }
      ]
    }
  ],
  "settings": [
    {
      "type": "product",
      "id": "product",
      "label": "t:sections.featured-product.settings.product.label"
    },
    {
      "type": "checkbox",
      "id": "show_selector",
      "label": "Selektor anzeigen",
      "default": false
    }
  ],
  "presets": [
    {
      "name": "t:sections.featured-product.presets.name",
      "category": "Product"
    }
  ]
}
{% endschema %}
